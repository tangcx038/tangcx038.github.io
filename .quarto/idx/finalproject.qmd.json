{"title":"FINAL PROJECT","markdown":{"yaml":{"title":"FINAL PROJECT","runtime":"shiny","output":"html_document"},"headingText":"Interactive Map","containsRefs":false,"markdown":"\n\n\n```{r setup, include=FALSE}\nlibrary(shiny)\nlibrary(flexdashboard)\nlibrary(tidyverse)\nlibrary(highcharter)\nlibrary(gt)\nlibrary(htmltools)\nlibrary(viridis)\nlibrary(maps)\nlibrary(sf)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(plotly)\nlibrary(quarto)\nlibrary(RColorBrewer)\nlibrary(ggiraph)\n```\n\n```{=html}\n<link rel=\"stylesheet\" href=\"./_site/styles.css\">\n\n\n```\n\n```{r, results='asis', echo=FALSE}\ncat(\"\n<section class=\\\"image-container\\\">\n  <img src=\\\"delicious-vietnamese-food-including-pho-ga-noodles-spring-rolls-white-table.jpg\\\" style=\\\"width:100%;height:300px;object-fit:cover;\\\"/>\n  <h5 class=\\\"center-text-bg-img\\\">Unveiling the true severity of food waste</h5>\n  <p class=\\\"bottom-right-text-bg-img\\\">Image by [Freepik](https://www.freepik.com/free-photo/close-up-hand-holding-wooden-board_14351726.htm#query=food%20waste&position=26&from_view=search&track=ais)</p>\n</section>\n\n<section id=\\\"introduction\\\" class=\\\"container\\\" width=\\\"100%\\\">\n  <h3 class=\\\"text-center fw-bold my-5\\\">Introduction</h3>\n  <p>Food comes from a long journey, starting with the farmer and ending up in our homes. This journey, called the supply chain, uses a lot of the Earth's resources. When we sit down to eat, we get to enjoy the amazing result. Tradition and good cooking bring us tasty, nourishing, joyful, passionate, and life-giving meals. However, the sad truth is that we throw away a ton of our food—loads of it! And when we do that, we're also tossing away all the valuable resources that were essential to make it in the first place.</p>\n\n  <p>**WASTING FOOD IS WASTING AGRICULTURAL LAND.** The food produced but wasted globally every year requires 1.4 billion hectares of land, which is close to 30% of the world agricultural land area (UNEP, 2022).</p>\n\n  <p>**WASTING FOOD IS CONTRIBUTING TO GLOBAL WARMING.** The carbon footprint of food wasted globally every year is 3.3 billion tonnes of carbon dioxide. If food waste was a country, it would be the third top emitter after the USA and China (FAO, 2011).</p>\n\n  <p>**WASTING FOOD IS WASTING MONEY.** Besides its environmental cost, food wastage also represents a loss of economic value. On a global scale, the economic cost of the overall amount of food wastage is about $US 750 billion, equivalent to the GDP of Switzerland (FAO, 2011).</p>\n\n  <h3 id=\\\"\\\" class=\\\"text-center fw-bold my-5\\\">Wondering how much <div class=\\\"foodwasteword\\\">food is wasted across the world?</div></h3>\n  <p>According to the **United Nations' Food and Agricultural Organisation of United Nation (FAO)**, an estimation of all the food produced every year for human consumption in the world, one-third does not reach our stomachs.</p>\n</section>\n\")\n```\n\n\n```{r, echo=FALSE, warning=FALSE, message=FALSE}\ncreateInteractiveMap <- function(data_file, map_resolution = \"world\") {\n  # Import the data with coordinates\n  world_map <- map_data(map_resolution)\n  accesstonet <- read.csv(data_file)\n  map_data <- accesstonet %>% rename(region = country)\n\n  map <- left_join(world_map, map_data, by = \"region\")\n\n  # Create the ggplot object\n  gg <- ggplot(map, aes(long, lat, group = group, text = paste(\"Country: \", region, \"<br>Annual Kg per Capita: \", FoodWaste2021kgcapitayear))) +\n    geom_polygon(aes(fill = FoodWaste2021kgcapitayear), color = \"white\", size = 0.03) +\n    scale_fill_gradient(low = \"lightgreen\", high = \"darkgreen\") +\n    theme_minimal()\n\n  # Convert ggplot to plotly with specified width and height\n  map_plotly <- ggplotly(gg, tooltip = \"text\", width = 1000, height = 600)\n\n  # Set scrollZoom to FALSE\n  map_plotly$x$layout$updatemenus <- list(list(type = \"zoom\",\nshowactive = FALSE,\nbuttons = list(list(args = list(\"zoomType\", \"zoomin\"),\nlabel = \"Zoom In\",\nmethod = \"relayout\"),\nlist(args = list(\"zoomType\", \"zoomout\"),\nlabel = \"Zoom Out\",\nmethod = \"relayout\")),\ndirection = \"left\",\npad = list(r = 10, t = 87),\nshowactive = FALSE,\ntype = \"buttons\",\nx = 0.1,\ny = 1))\n\n  # Display the interactive map\n  return(map_plotly)\n}\n\n#interactiveMap <- createInteractiveMap(\"food-waste-by-country-2023.csv\")\n#interactiveMap\n```\n\n\n```{r, results='asis', echo=FALSE}\ncat(\"\n<section class=\\\"image-container\\\">\n  <img src=\\\"tasty-food-arrangement-top-view.jpg\\\" style=\\\"width:100%;height:300px;object-fit:cover;\\\"/>\n  <h5 class=\\\"center-text-bg-img\\\">Food in Singapore</h5>\n  <p class=\\\"bottom-right-text-bg-img\\\">Image by [Freepik](https://www.freepik.com/free-photo/tasty-food-arrangement-top-view_20552615.htm#query=food%20packages&position=23&from_view=search&track=ais&uuid=93342a26-4a2a-4889-a4e0-fad38046c4af)</p>\n</section>\n\n<section id=\\\"Zooming into our home country\\\" class=\\\"container\\\" width=\\\"100%\\\">\n  <h3 class=\\\"text-center fw-bold my-5\\\">Singapore</h3>\n  <p>With increasing number of **food factories**, the number of food waste **increases**.</p>\n</section>\n\")\n```\n\n```{r, echo=FALSE, warning=FALSE, message=FALSE}\n# Load the required library\nlibrary(plotly)\n\n# Read the CSV file\nfoodfactories_sg <- read.csv(\"LicensedFoodFactoriesEndOfPeriodAnnual.csv\")\n\n# Create an interactive spline plot with points\nspline_plot <- plot_ly(foodfactories_sg, x = ~year, y = ~no_of_food_factories, type = 'scatter', mode = 'lines+markers',\n                       line = list(shape = 'spline'),\n                       text = ~paste(\"Year: \", year, \"<br>No of food factories: \", no_of_food_factories),\n                       hoverinfo = 'text') %>%\n  layout(title = \"Number of Food Factories Over Time\",\n         xaxis = list(title = \"Year\"),\n         yaxis = list(title = \"Number of Food Factories\"))\n\n# Display the interactive spline plot with points\n#spline_plot\n```\n\n```{r, echo=FALSE, warning=FALSE, message=FALSE}\nlibrary(tidyverse)\nlibrary(plotly)\n\ncreateInteractiveMap <- function(data_file, map_resolution = \"world\") {\n  # Import the data with coordinates\n  world_map <- map_data(map_resolution)\n  accesstonet <- read.csv(data_file)\n\n  # Check column names in accesstonet\n  print(names(accesstonet))\n\n  country_column <- case_when(\n  \"Entity\" %in% names(accesstonet) ~ \"Entity\",\n  \"region\" %in% names(accesstonet) ~ \"region\",\n  TRUE ~ NA_character_\n)\n\n\n  map_data <- accesstonet %>% rename(region := !!country_column)\n\n  map <- left_join(world_map, map_data, by = \"region\")\n\n  emissions_from_food <- read.csv(\"emissions-from-food.csv\")\n\n  emissions_from_food <- emissions_from_food %>% \n    mutate(country = case_when(Entity == \"United States\" ~ \"USA\",\n                               Entity == \"United Kingdom\" ~ \"UK\",\n                               Entity == \"Czechia\" ~ \"Czech Republic\",\n                               Entity == \"Democratic Republic of Congo\" ~ \"Democratic Republic of the Congo\",\n                               TRUE ~ Entity))\n\n  world_emissions_map <- emissions_from_food %>% \n  filter(country != \"World\") %>% \n  left_join(map, by = c(\"country\" = \"region\", \"Year\"))\n\n\n  # Plot\n  map_plot <- world_emissions_map %>% \n    filter(Year == 2015) %>% \n    ggplot(aes(x = long, y = lat, group = group)) +\n    geom_polygon_interactive(\n      aes(fill = `Food_emissions_by_country`, \n          text = paste(\"Country: \",'country', \"<br>Food Emissions: \",'Food_emissions_by_country')), \n      color = \"black\", size = 0.2\n    ) +\n    scale_fill_binned(\n      low = \"darkseagreen1\", high = \"seagreen\", \n      breaks = c(10000000, 50000000, 100000000, 500000000, 1000000000),\n      label = c(\"10 million t\", \"50 million t\", \"100 million t\", \"500 million t\", \"1 billion t\")\n    ) +\n    theme_void()\n\n  # Convert ggplot to plotly\n  map_plotly <- ggplotly(map_plot)\n\n  # Add a caption using layout\n  map_plotly <- map_plotly %>% layout(\n    annotations = list(\n      text = \"Source: Crippa et al. (2021). Food systems are responsible for a third of global anthropogenic GHG emissions. Nature Food. OurWorldInData.org/environmental-impacts-of-food ● CC BY\",\n      showarrow = FALSE, x = 0, y = -0.1, xref = \"paper\", yref = \"paper\"\n    )\n  )\n\n  return(map_plotly)\n}\n\n# Interactive Map\ninteractiveMap <- createInteractiveMap(\"emissions-from-food.csv\")\ninteractiveMap\n\n```\n\n\n","srcMarkdownNoYaml":"\n\n\n```{r setup, include=FALSE}\nlibrary(shiny)\nlibrary(flexdashboard)\nlibrary(tidyverse)\nlibrary(highcharter)\nlibrary(gt)\nlibrary(htmltools)\nlibrary(viridis)\nlibrary(maps)\nlibrary(sf)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(plotly)\nlibrary(quarto)\nlibrary(RColorBrewer)\nlibrary(ggiraph)\n```\n\n```{=html}\n<link rel=\"stylesheet\" href=\"./_site/styles.css\">\n\n\n```\n\n```{r, results='asis', echo=FALSE}\ncat(\"\n<section class=\\\"image-container\\\">\n  <img src=\\\"delicious-vietnamese-food-including-pho-ga-noodles-spring-rolls-white-table.jpg\\\" style=\\\"width:100%;height:300px;object-fit:cover;\\\"/>\n  <h5 class=\\\"center-text-bg-img\\\">Unveiling the true severity of food waste</h5>\n  <p class=\\\"bottom-right-text-bg-img\\\">Image by [Freepik](https://www.freepik.com/free-photo/close-up-hand-holding-wooden-board_14351726.htm#query=food%20waste&position=26&from_view=search&track=ais)</p>\n</section>\n\n<section id=\\\"introduction\\\" class=\\\"container\\\" width=\\\"100%\\\">\n  <h3 class=\\\"text-center fw-bold my-5\\\">Introduction</h3>\n  <p>Food comes from a long journey, starting with the farmer and ending up in our homes. This journey, called the supply chain, uses a lot of the Earth's resources. When we sit down to eat, we get to enjoy the amazing result. Tradition and good cooking bring us tasty, nourishing, joyful, passionate, and life-giving meals. However, the sad truth is that we throw away a ton of our food—loads of it! And when we do that, we're also tossing away all the valuable resources that were essential to make it in the first place.</p>\n\n  <p>**WASTING FOOD IS WASTING AGRICULTURAL LAND.** The food produced but wasted globally every year requires 1.4 billion hectares of land, which is close to 30% of the world agricultural land area (UNEP, 2022).</p>\n\n  <p>**WASTING FOOD IS CONTRIBUTING TO GLOBAL WARMING.** The carbon footprint of food wasted globally every year is 3.3 billion tonnes of carbon dioxide. If food waste was a country, it would be the third top emitter after the USA and China (FAO, 2011).</p>\n\n  <p>**WASTING FOOD IS WASTING MONEY.** Besides its environmental cost, food wastage also represents a loss of economic value. On a global scale, the economic cost of the overall amount of food wastage is about $US 750 billion, equivalent to the GDP of Switzerland (FAO, 2011).</p>\n\n  <h3 id=\\\"\\\" class=\\\"text-center fw-bold my-5\\\">Wondering how much <div class=\\\"foodwasteword\\\">food is wasted across the world?</div></h3>\n  <p>According to the **United Nations' Food and Agricultural Organisation of United Nation (FAO)**, an estimation of all the food produced every year for human consumption in the world, one-third does not reach our stomachs.</p>\n</section>\n\")\n```\n\n\n```{r, echo=FALSE, warning=FALSE, message=FALSE}\ncreateInteractiveMap <- function(data_file, map_resolution = \"world\") {\n  # Import the data with coordinates\n  world_map <- map_data(map_resolution)\n  accesstonet <- read.csv(data_file)\n  map_data <- accesstonet %>% rename(region = country)\n\n  map <- left_join(world_map, map_data, by = \"region\")\n\n  # Create the ggplot object\n  gg <- ggplot(map, aes(long, lat, group = group, text = paste(\"Country: \", region, \"<br>Annual Kg per Capita: \", FoodWaste2021kgcapitayear))) +\n    geom_polygon(aes(fill = FoodWaste2021kgcapitayear), color = \"white\", size = 0.03) +\n    scale_fill_gradient(low = \"lightgreen\", high = \"darkgreen\") +\n    theme_minimal()\n\n  # Convert ggplot to plotly with specified width and height\n  map_plotly <- ggplotly(gg, tooltip = \"text\", width = 1000, height = 600)\n\n  # Set scrollZoom to FALSE\n  map_plotly$x$layout$updatemenus <- list(list(type = \"zoom\",\nshowactive = FALSE,\nbuttons = list(list(args = list(\"zoomType\", \"zoomin\"),\nlabel = \"Zoom In\",\nmethod = \"relayout\"),\nlist(args = list(\"zoomType\", \"zoomout\"),\nlabel = \"Zoom Out\",\nmethod = \"relayout\")),\ndirection = \"left\",\npad = list(r = 10, t = 87),\nshowactive = FALSE,\ntype = \"buttons\",\nx = 0.1,\ny = 1))\n\n  # Display the interactive map\n  return(map_plotly)\n}\n\n# Interactive Map\n#interactiveMap <- createInteractiveMap(\"food-waste-by-country-2023.csv\")\n#interactiveMap\n```\n\n\n```{r, results='asis', echo=FALSE}\ncat(\"\n<section class=\\\"image-container\\\">\n  <img src=\\\"tasty-food-arrangement-top-view.jpg\\\" style=\\\"width:100%;height:300px;object-fit:cover;\\\"/>\n  <h5 class=\\\"center-text-bg-img\\\">Food in Singapore</h5>\n  <p class=\\\"bottom-right-text-bg-img\\\">Image by [Freepik](https://www.freepik.com/free-photo/tasty-food-arrangement-top-view_20552615.htm#query=food%20packages&position=23&from_view=search&track=ais&uuid=93342a26-4a2a-4889-a4e0-fad38046c4af)</p>\n</section>\n\n<section id=\\\"Zooming into our home country\\\" class=\\\"container\\\" width=\\\"100%\\\">\n  <h3 class=\\\"text-center fw-bold my-5\\\">Singapore</h3>\n  <p>With increasing number of **food factories**, the number of food waste **increases**.</p>\n</section>\n\")\n```\n\n```{r, echo=FALSE, warning=FALSE, message=FALSE}\n# Load the required library\nlibrary(plotly)\n\n# Read the CSV file\nfoodfactories_sg <- read.csv(\"LicensedFoodFactoriesEndOfPeriodAnnual.csv\")\n\n# Create an interactive spline plot with points\nspline_plot <- plot_ly(foodfactories_sg, x = ~year, y = ~no_of_food_factories, type = 'scatter', mode = 'lines+markers',\n                       line = list(shape = 'spline'),\n                       text = ~paste(\"Year: \", year, \"<br>No of food factories: \", no_of_food_factories),\n                       hoverinfo = 'text') %>%\n  layout(title = \"Number of Food Factories Over Time\",\n         xaxis = list(title = \"Year\"),\n         yaxis = list(title = \"Number of Food Factories\"))\n\n# Display the interactive spline plot with points\n#spline_plot\n```\n\n```{r, echo=FALSE, warning=FALSE, message=FALSE}\nlibrary(tidyverse)\nlibrary(plotly)\n\ncreateInteractiveMap <- function(data_file, map_resolution = \"world\") {\n  # Import the data with coordinates\n  world_map <- map_data(map_resolution)\n  accesstonet <- read.csv(data_file)\n\n  # Check column names in accesstonet\n  print(names(accesstonet))\n\n  country_column <- case_when(\n  \"Entity\" %in% names(accesstonet) ~ \"Entity\",\n  \"region\" %in% names(accesstonet) ~ \"region\",\n  TRUE ~ NA_character_\n)\n\n\n  map_data <- accesstonet %>% rename(region := !!country_column)\n\n  map <- left_join(world_map, map_data, by = \"region\")\n\n  emissions_from_food <- read.csv(\"emissions-from-food.csv\")\n\n  emissions_from_food <- emissions_from_food %>% \n    mutate(country = case_when(Entity == \"United States\" ~ \"USA\",\n                               Entity == \"United Kingdom\" ~ \"UK\",\n                               Entity == \"Czechia\" ~ \"Czech Republic\",\n                               Entity == \"Democratic Republic of Congo\" ~ \"Democratic Republic of the Congo\",\n                               TRUE ~ Entity))\n\n  world_emissions_map <- emissions_from_food %>% \n  filter(country != \"World\") %>% \n  left_join(map, by = c(\"country\" = \"region\", \"Year\"))\n\n\n  # Plot\n  map_plot <- world_emissions_map %>% \n    filter(Year == 2015) %>% \n    ggplot(aes(x = long, y = lat, group = group)) +\n    geom_polygon_interactive(\n      aes(fill = `Food_emissions_by_country`, \n          text = paste(\"Country: \",'country', \"<br>Food Emissions: \",'Food_emissions_by_country')), \n      color = \"black\", size = 0.2\n    ) +\n    scale_fill_binned(\n      low = \"darkseagreen1\", high = \"seagreen\", \n      breaks = c(10000000, 50000000, 100000000, 500000000, 1000000000),\n      label = c(\"10 million t\", \"50 million t\", \"100 million t\", \"500 million t\", \"1 billion t\")\n    ) +\n    theme_void()\n\n  # Convert ggplot to plotly\n  map_plotly <- ggplotly(map_plot)\n\n  # Add a caption using layout\n  map_plotly <- map_plotly %>% layout(\n    annotations = list(\n      text = \"Source: Crippa et al. (2021). Food systems are responsible for a third of global anthropogenic GHG emissions. Nature Food. OurWorldInData.org/environmental-impacts-of-food ● CC BY\",\n      showarrow = FALSE, x = 0, y = -0.1, xref = \"paper\", yref = \"paper\"\n    )\n  )\n\n  return(map_plotly)\n}\n\n# Interactive Map\ninteractiveMap <- createInteractiveMap(\"emissions-from-food.csv\")\ninteractiveMap\n\n```\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":"html_document","warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"reference-location":"margin","css":["styles.css"],"output-file":"finalproject.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.353","preview":{"port":22222,"browser":true,"watch-inputs":true,"navigate":true},"editor":"visual","theme":["theme.scss"],"fontsize":"1.35em","fig-cap-location":"margin","anchor-sections":true,"grid":{"sidebar-width":"100px","body-width":"900px","margin-width":"200px","gutter-width":"1.5rem"},"title":"FINAL PROJECT","runtime":"shiny"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}